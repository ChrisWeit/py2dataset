@startuml
'Used to create py2dataset.png from https://www.plantuml.com/plantuml/uml'
: python py2dataset.py 

**Optional arguments:**
- `--start_dir` (str, optional): Starting directory to search for Python files. Defaults to the current working directory.
- `--output_dir` (str, optional): Directory to write the output files. Defaults to the 'datasets' directory in the current working directory.
- `--questions_pathname` (str, optional): Path to the questions file. If not provided, defaults defined in 'get_py2dataset_params.py' will be used.
- `--model_config_pathname` (str, optional): Path to the model configuration file. If not provided, defaults defined in 'get_py2dataset_params.py' will be used.
- `--use_llm` (bool, optional): Use a Large Language Model for generating JSON answers. Defaults to False.
- `--use_summary` (bool, optional): Use code summary to reduce dataset context length. Defaults to False.
- `--graph` (bool, optional): Generate graphs for the code. Defaults to False.
- `--html` (bool, optional): Generate HTML files from the JSON files. Defaults to False.
- `--quiet` (bool, optional): Limit logging output. If provided, only warnings and errors will be logged. Defaults to False.;

:py2dataset.py:
- Parse command line arguments
- Read questions
- Obtain Python File listing within OUTPUT_DIR;

Repeat :For each Python file;

:get_python_file_details.py:
- Extract code details from AST
- Generate internal and external code relationship graphs;
:get_python_dataset.py: 
- Answer questions and format answers;

Repeat :For each question;

if (use_llm and purpose question) then (yes)
:Use the language model to answer question;
else (no)
:Parse the AST obtained data to answer question;
endif

:Construct qa.json data
- question = current question
- answer = answer to current question
        
Construct instruct.json data
- instruction = current question
- input = code element
- output = answer to current question;

Repeat while (More questions?) is (yes)
->no;

:save_py2dataset_output.py:
save datasets and code file details
- <filename>.qa.json
- <filename>.instruct.json
- <filename>.details.yaml';

if (graph is True) then (yes)
:Save code graphs
- <filename>.internal.png
- <filename>.external.png;
endif

Repeat while (More Python Files?) is (yes)
->no;

:Combine all qa and instruct JSON files and create other datasets
- `qa.json` (complete qa dataset)
- `qa_purpose.json` (dataset with only purpose responses)
- `instruct.json` (complete instruct dataset)
- `instruct_purpose.json` (dataset with only purpose responses)
- `instruct_cleaned.json` (replace duplicate code elements with empty string)
- `instruct_cleaned_purpose.json` (dataset with only purpose responses);
:End;

@enduml